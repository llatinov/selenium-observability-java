version: "3"

networks:
  observability:
    driver: bridge

services:
  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=person-service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespassword
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - observability

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    ports:
      - 8005:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./db/pgadmin-servers.json:/pgadmin4/servers.json
    networks:
      - observability
    depends_on:
      - postgres

  loki:
    image: grafana/loki:2.2.0
    command: -config.file=/etc/loki/loki-local.yaml
    ports:
      - 3101:3100 # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./etc/loki-local.yaml:/etc/loki/loki-local.yaml
      - ./data/loki-data:/tmp/loki
    networks:
      - observability

  tempo:
    image: grafana/tempo:1.1.0
    command: ["-config.file=/etc/tempo.yaml"]
    restart: unless-stopped
    ports:
      - 14268:14268 # Jaeger ingest, Jaeger - Thrift HTTP
      - 14250:14250 # Jaeger - GRPC
      - 9411:9411 # Zipkin
      - 55680:55680 # OpenTelemetry GRPC
      - 55681:55681 # OpenTelemetry HTTP
      - 3102:3100 # Tempo
    volumes:
      - ./etc/tempo-local.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/tmp/tempo
    networks:
      - observability

  tempo-query:
    image: grafana/tempo-query:1.1.0
    command: ["--grpc-storage-plugin.configuration-file=/etc/tempo-query.yaml"]
    ports:
      - 16686:16686 # Jaeger-ui
    volumes:
      - ./etc/tempo-query.yaml:/etc/tempo-query.yaml
    networks:
      - observability
    depends_on:
      - tempo

  promtail:
    image: grafana/promtail:2.2.0
    command: -config.file=/etc/promtail/promtail-local.yaml
    volumes:
      - ./etc/promtail-local.yaml:/etc/promtail/promtail-local.yaml
      - ./data/logs:/app/logs
    networks:
      - observability
    depends_on:
      - loki
      - backend

  volume_exporter:
    image: mnadeem/volume_exporter
    command:
      [
        "--volume-dir=tempo:/tmp/tempo",
        "--volume-dir=logs:/app/logs",
        "--volume-dir=loki:/tmp/loki"
      ]
    ports:
      - 9889:9888
    volumes:
      - ./data/logs:/app/logs
      - ./data/tempo-data:/tmp/tempo
      - ./data/loki-data:/tmp/loki
    networks:
      - observability

  prometheus:
    image: prom/prometheus:latest
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    ports:
      - 9090:9090
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    networks:
      - observability
    depends_on:
      - backend
      - volume_exporter

  grafana:
    image: grafana/grafana:7.4.0-ubuntu
    ports:
      - 3001:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./etc/grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./etc/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
    networks:
      - observability
    depends_on:
      - prometheus
      - tempo-query
      - loki

  backend:
    build:
      context: .
      dockerfile: ./person-service/Dockerfile
    ports:
      - 8090:8090
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/person-service
      DB_USER: postgres
      DB_PASS: postgrespassword
    volumes:
      - ./data/logs:/app/logs
    networks:
      - observability
    depends_on:
      - postgres
      - tempo
